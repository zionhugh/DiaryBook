{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/zionhugh/Desktop/Meteor/all_simple_todos/simple-todos-04/packages/react-meteor-data/ReactMeteorData.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/react-meteor-data/ReactMeteorData.jsx","filename":"/Users/zionhugh/Desktop/Meteor/all_simple_todos/simple-todos-04/packages/react-meteor-data/ReactMeteorData.jsx","passPerPreset":false,"envName":"development","cwd":"/Users/zionhugh/Desktop/Meteor/all_simple_todos/simple-todos-04","root":"/Users/zionhugh/Desktop/Meteor/all_simple_todos/simple-todos-04","presets":[],"generatorOpts":{"filename":"/Users/zionhugh/Desktop/Meteor/all_simple_todos/simple-todos-04/packages/react-meteor-data/ReactMeteorData.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/react-meteor-data/ReactMeteorData.jsx"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nmodule.export({\n  ReactMeteorData: () => ReactMeteorData,\n  default: () => connect\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Tracker;\nmodule.link(\"meteor/tracker\", {\n  Tracker(v) {\n    Tracker = v;\n  }\n\n}, 2);\n\n// A class to keep the state and utility methods needed to manage\n// the Meteor data for a component.\nclass MeteorDataManager {\n  constructor(component) {\n    this.component = component;\n    this.computation = null;\n    this.oldData = null;\n  }\n\n  dispose() {\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n  }\n\n  calculateData() {\n    const component = this.component;\n\n    if (!component.getMeteorData) {\n      return null;\n    } // When rendering on the server, we don't want to use the Tracker.\n    // We only do the first rendering on the server so we can get the data right away\n\n\n    if (Meteor.isServer) {\n      return component.getMeteorData();\n    }\n\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n\n    let data; // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n    // This can happen if someone calls `ReactDOM.render` inside a Computation.\n    // In that case, we want to opt out of the normal behavior of nested\n    // Computations, where if the outer one is invalidated or stopped,\n    // it stops the inner one.\n\n    this.computation = Tracker.nonreactive(() => Tracker.autorun(c => {\n      if (c.firstRun) {\n        const savedSetState = component.setState;\n\n        try {\n          component.setState = () => {\n            throw new Error('Can\\'t call `setState` inside `getMeteorData` as this could ' + 'cause an endless loop. To respond to Meteor data changing, ' + 'consider making this component a \\\"wrapper component\\\" that ' + 'only fetches data and passes it in as props to a child ' + 'component. Then you can use `componentWillReceiveProps` in ' + 'that child component.');\n          };\n\n          data = component.getMeteorData();\n        } finally {\n          component.setState = savedSetState;\n        }\n      } else {\n        // Stop this computation instead of using the re-run.\n        // We use a brand-new autorun for each call to getMeteorData\n        // to capture dependencies on any reactive data sources that\n        // are accessed.  The reason we can't use a single autorun\n        // for the lifetime of the component is that Tracker only\n        // re-runs autoruns at flush time, while we need to be able to\n        // re-call getMeteorData synchronously whenever we want, e.g.\n        // from componentWillUpdate.\n        c.stop(); // Calling forceUpdate() triggers componentWillUpdate which\n        // recalculates getMeteorData() and re-renders the component.\n\n        component.forceUpdate();\n      }\n    }));\n\n    if (Package.mongo && Package.mongo.Mongo) {\n      Object.keys(data).forEach(key => {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          console.warn('Warning: you are returning a Mongo cursor from getMeteorData. ' + 'This value will not be reactive. You probably want to call ' + '`.fetch()` on the cursor before returning it.');\n        }\n      });\n    }\n\n    return data;\n  }\n\n  updateData(newData) {\n    const component = this.component;\n    const oldData = this.oldData;\n\n    if (!(newData && typeof newData === 'object')) {\n      throw new Error('Expected object returned from getMeteorData');\n    } // update componentData in place based on newData\n\n\n    for (let key in newData) {\n      component.data[key] = newData[key];\n    } // if there is oldData (which is every time this method is called\n    // except the first), delete keys in newData that aren't in\n    // oldData.  don't interfere with other keys, in case we are\n    // co-existing with something else that writes to a component's\n    // this.data.\n\n\n    if (oldData) {\n      for (let key in oldData) {\n        if (!(key in newData)) {\n          delete component.data[key];\n        }\n      }\n    }\n\n    this.oldData = newData;\n  }\n\n}\n\nconst ReactMeteorData = {\n  componentWillMount() {\n    this.data = {};\n    this._meteorDataManager = new MeteorDataManager(this);\n\n    const newData = this._meteorDataManager.calculateData();\n\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    const saveProps = this.props;\n    const saveState = this.state;\n    let newData;\n\n    try {\n      // Temporarily assign this.state and this.props,\n      // so that they are seen by getMeteorData!\n      // This is a simulation of how the proposed Observe API\n      // for React will work, which calls observe() after\n      // componentWillUpdate and after props and state are\n      // updated, but before render() is called.\n      // See https://github.com/facebook/react/issues/3398.\n      this.props = nextProps;\n      this.state = nextState;\n      newData = this._meteorDataManager.calculateData();\n    } finally {\n      this.props = saveProps;\n      this.state = saveState;\n    }\n\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUnmount() {\n    this._meteorDataManager.dispose();\n  }\n\n};\n\nclass ReactComponent extends React.Component {}\n\nObject.assign(ReactComponent.prototype, ReactMeteorData);\n\nclass ReactPureComponent extends React.PureComponent {}\n\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);\n\nfunction connect(options) {\n  let expandedOptions = options;\n\n  if (typeof options === 'function') {\n    expandedOptions = {\n      getMeteorData: options\n    };\n  }\n\n  const {\n    getMeteorData,\n    pure = true\n  } = expandedOptions;\n  const BaseComponent = pure ? ReactPureComponent : ReactComponent;\n  return WrappedComponent => class ReactMeteorDataComponent extends BaseComponent {\n    getMeteorData() {\n      return getMeteorData(this.props);\n    }\n\n    render() {\n      return React.createElement(WrappedComponent, (0, _extends2.default)({}, this.props, this.data));\n    }\n\n  };\n}","map":{"version":3,"sources":["packages/react-meteor-data/ReactMeteorData.jsx"],"names":["module","export","ReactMeteorData","default","connect","React","link","v","Meteor","Tracker","MeteorDataManager","constructor","component","computation","oldData","dispose","stop","calculateData","getMeteorData","isServer","data","nonreactive","autorun","c","firstRun","savedSetState","setState","Error","forceUpdate","Package","mongo","Mongo","Object","keys","forEach","key","Cursor","console","warn","updateData","newData","componentWillMount","_meteorDataManager","componentWillUpdate","nextProps","nextState","saveProps","props","saveState","state","componentWillUnmount","ReactComponent","Component","assign","prototype","ReactPureComponent","PureComponent","options","expandedOptions","pure","BaseComponent","WrappedComponent","ReactMeteorDataComponent","render"],"mappings":"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","sourcesContent":["/* global Package */\n/* eslint-disable react/prefer-stateless-function */\n\nimport React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { Tracker } from 'meteor/tracker';\n\n// A class to keep the state and utility methods needed to manage\n// the Meteor data for a component.\nclass MeteorDataManager {\n  constructor(component) {\n    this.component = component;\n    this.computation = null;\n    this.oldData = null;\n  }\n\n  dispose() {\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n  }\n\n  calculateData() {\n    const component = this.component;\n\n    if (!component.getMeteorData) {\n      return null;\n    }\n\n    // When rendering on the server, we don't want to use the Tracker.\n    // We only do the first rendering on the server so we can get the data right away\n    if (Meteor.isServer) {\n      return component.getMeteorData();\n    }\n\n    if (this.computation) {\n      this.computation.stop();\n      this.computation = null;\n    }\n\n    let data;\n    // Use Tracker.nonreactive in case we are inside a Tracker Computation.\n    // This can happen if someone calls `ReactDOM.render` inside a Computation.\n    // In that case, we want to opt out of the normal behavior of nested\n    // Computations, where if the outer one is invalidated or stopped,\n    // it stops the inner one.\n    this.computation = Tracker.nonreactive(() => (\n      Tracker.autorun((c) => {\n        if (c.firstRun) {\n          const savedSetState = component.setState;\n          try {\n            component.setState = () => {\n              throw new Error(\n                'Can\\'t call `setState` inside `getMeteorData` as this could '\n                + 'cause an endless loop. To respond to Meteor data changing, '\n                + 'consider making this component a \\\"wrapper component\\\" that '\n                + 'only fetches data and passes it in as props to a child '\n                + 'component. Then you can use `componentWillReceiveProps` in '\n                + 'that child component.');\n            };\n\n            data = component.getMeteorData();\n          } finally {\n            component.setState = savedSetState;\n          }\n        } else {\n          // Stop this computation instead of using the re-run.\n          // We use a brand-new autorun for each call to getMeteorData\n          // to capture dependencies on any reactive data sources that\n          // are accessed.  The reason we can't use a single autorun\n          // for the lifetime of the component is that Tracker only\n          // re-runs autoruns at flush time, while we need to be able to\n          // re-call getMeteorData synchronously whenever we want, e.g.\n          // from componentWillUpdate.\n          c.stop();\n          // Calling forceUpdate() triggers componentWillUpdate which\n          // recalculates getMeteorData() and re-renders the component.\n          component.forceUpdate();\n        }\n      })\n    ));\n\n    if (Package.mongo && Package.mongo.Mongo) {\n      Object.keys(data).forEach((key) => {\n        if (data[key] instanceof Package.mongo.Mongo.Cursor) {\n          console.warn(\n            'Warning: you are returning a Mongo cursor from getMeteorData. '\n            + 'This value will not be reactive. You probably want to call '\n            + '`.fetch()` on the cursor before returning it.'\n          );\n        }\n      });\n    }\n\n    return data;\n  }\n\n  updateData(newData) {\n    const component = this.component;\n    const oldData = this.oldData;\n\n    if (!(newData && (typeof newData) === 'object')) {\n      throw new Error('Expected object returned from getMeteorData');\n    }\n    // update componentData in place based on newData\n    for (let key in newData) {\n      component.data[key] = newData[key];\n    }\n    // if there is oldData (which is every time this method is called\n    // except the first), delete keys in newData that aren't in\n    // oldData.  don't interfere with other keys, in case we are\n    // co-existing with something else that writes to a component's\n    // this.data.\n    if (oldData) {\n      for (let key in oldData) {\n        if (!(key in newData)) {\n          delete component.data[key];\n        }\n      }\n    }\n    this.oldData = newData;\n  }\n}\n\nexport const ReactMeteorData = {\n  componentWillMount() {\n    this.data = {};\n    this._meteorDataManager = new MeteorDataManager(this);\n    const newData = this._meteorDataManager.calculateData();\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    const saveProps = this.props;\n    const saveState = this.state;\n    let newData;\n    try {\n      // Temporarily assign this.state and this.props,\n      // so that they are seen by getMeteorData!\n      // This is a simulation of how the proposed Observe API\n      // for React will work, which calls observe() after\n      // componentWillUpdate and after props and state are\n      // updated, but before render() is called.\n      // See https://github.com/facebook/react/issues/3398.\n      this.props = nextProps;\n      this.state = nextState;\n      newData = this._meteorDataManager.calculateData();\n    } finally {\n      this.props = saveProps;\n      this.state = saveState;\n    }\n\n    this._meteorDataManager.updateData(newData);\n  },\n\n  componentWillUnmount() {\n    this._meteorDataManager.dispose();\n  },\n};\n\nclass ReactComponent extends React.Component {}\nObject.assign(ReactComponent.prototype, ReactMeteorData);\nclass ReactPureComponent extends React.PureComponent {}\nObject.assign(ReactPureComponent.prototype, ReactMeteorData);\n\nexport default function connect(options) {\n  let expandedOptions = options;\n  if (typeof options === 'function') {\n    expandedOptions = {\n      getMeteorData: options,\n    };\n  }\n\n  const { getMeteorData, pure = true } = expandedOptions;\n\n  const BaseComponent = pure ? ReactPureComponent : ReactComponent;\n  return (WrappedComponent) => (\n    class ReactMeteorDataComponent extends BaseComponent {\n      getMeteorData() {\n        return getMeteorData(this.props);\n      }\n      render() {\n        return <WrappedComponent {...this.props} {...this.data} />;\n      }\n    }\n  );\n}\n"]},"sourceType":"script","hash":"cf9cd56c661b7dcaff90f65996daa20558ec6d2e"}
