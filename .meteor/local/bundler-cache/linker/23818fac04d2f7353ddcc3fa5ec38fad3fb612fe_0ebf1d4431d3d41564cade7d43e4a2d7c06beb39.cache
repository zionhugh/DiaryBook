[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/api/tasks.js                                                                         //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  Tasks: () => Tasks\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Tasks = new Mongo.Collection('tasks');\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/startup/accounts-config.js                                                           //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY'\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"AccountsUIWrapper.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/ui/AccountsUIWrapper.js                                                              //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  default: () => AccountsUIWrapper\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 2);\nlet Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 3);\n\nclass AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));\n  }\n\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n\n  render() {\n    // Just render a placeholder container that will be filled in\n    return React.createElement(\"span\", {\n      ref: \"container\"\n    });\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/ui/App.js                                                                            //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 4);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 5);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 6);\n\n//导入账号密码包\n// App component - 代表整个App的组件集合\nclass App extends Component {\n  //输入表格的event-handler\n  handleSubmit(event) {\n    event.preventDefault(); // 通过React 的 ref 找到 textInput 的值\n\n    const textTitle = ReactDOM.findDOMNode(this.refs.titleInput).value.trim();\n    const textArea = ReactDOM.findDOMNode(this.refs.areaInput).value.trim();\n    Tasks.insert({\n      textTitle,\n      textArea,\n      createdAt: new Date(),\n      //当前时间的数据\n      owner: Meteor.userId(),\n      // 已登录用户的 _id\n      username: Meteor.user().username // 已登录用户的username\n\n    }); // 清空表格\n\n    ReactDOM.findDOMNode(this.refs.titleInput).value = '';\n    ReactDOM.findDOMNode(this.refs.areaInput).value = '';\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n\n    if (!this.props.currentUser) {\n      filteredTasks = filteredTasks.filter(task => task.checked);\n    }\n\n    return filteredTasks.map(task => React.createElement(Task, {\n      key: task._id,\n      task: task\n    }) //Task子组件在这里被传入key/task两个props\n    );\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"The Diary Book\"), this.props.currentUser ? React.createElement(\"h3\", null, \"PrivateDiary:(\", this.props.privateCount, \")\") : '', React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      type: \"text\",\n      ref: \"titleInput\",\n      placeholder: \"Type The Diary Title\"\n    }), React.createElement(\"textarea\", {\n      className: \"new-text-area\",\n      type: \"text\",\n      ref: \"areaInput\",\n      placeholder: \"Say Something Today...\"\n    }), React.createElement(\"br\", null), React.createElement(\"button\", {\n      className: \"form-submit\",\n      type: \"submit\"\n    }, \"Submit\")) : ''), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n} //把tasks设定为App的props，tasks里的数据是从Tasks里fetch到的\n\n\nmodule.exportDefault(withTracker(() => {\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    //把数据根据插入顺序排序然后再抓取出来,并且设置成props\n    privateCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    //数一下有多少未完成,并且设置成props\n    currentUser: Meteor.user() //获得当前已登录用户的信息，并且设置成props\n\n  };\n})(App));\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// client/main.js                                                                               //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nmodule.link(\"../imports/startup/accounts-config.js\");\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/tasks.js","imports/startup/accounts-config.js","imports/ui/AccountsUIWrapper.js","imports/ui/App.js","client/main.js"],"names":["module","export","Tasks","Mongo","link","v","Collection","Accounts","ui","config","passwordSignupFields","default","AccountsUIWrapper","React","Component","ReactDOM","Template","Blaze","componentDidMount","view","render","loginButtons","findDOMNode","refs","container","componentWillUnmount","remove","Meteor","withTracker","Task","App","handleSubmit","event","preventDefault","textTitle","titleInput","value","trim","textArea","areaInput","insert","createdAt","Date","owner","userId","username","user","renderTasks","filteredTasks","props","tasks","currentUser","filter","task","checked","map","_id","privateCount","bind","exportDefault","find","sort","fetch","$ne","count","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["//api这个文件夹是存放集合的  这里的创建了一个Tasks集合, 并且在服务端创建了一个MongoDB collection名叫\"tasks\"\nimport { Mongo } from 'meteor/mongo';\n \nexport const Tasks = new Mongo.Collection('tasks');","//添加这个文件来确保使用 用户名 而非 email\nimport { Accounts } from 'meteor/accounts-base';\n \nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});","//设置账号密码的组件\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n \nexport default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n}","//App总组件\nimport React, { Component } from 'react';  //默认导入React\nimport ReactDOM from 'react-dom';  //为了使用event-handler\nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';  //把我门的App组件转化为更高阶的组件\n\nimport { Tasks } from '../api/tasks.js'; //导入Tasks集合\n \nimport Task from './Task.js';  //导入子集合\nimport AccountsUIWrapper from './AccountsUIWrapper.js';  //导入账号密码包\n \n// App component - 代表整个App的组件集合\nclass App extends Component {\n  //输入表格的event-handler\n  handleSubmit(event) {\n     event.preventDefault();\n     // 通过React 的 ref 找到 textInput 的值\n     const textTitle = ReactDOM.findDOMNode(this.refs.titleInput).value.trim();\n     const textArea = ReactDOM.findDOMNode(this.refs.areaInput).value.trim();\n     Tasks.insert({\n       textTitle,\n       textArea,\n       createdAt: new Date(), //当前时间的数据\n       owner: Meteor.userId(),           // 已登录用户的 _id\n       username: Meteor.user().username,  // 已登录用户的username\n     });\n     // 清空表格\n     ReactDOM.findDOMNode(this.refs.titleInput).value = '';\n     ReactDOM.findDOMNode(this.refs.areaInput).value = '';\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (!this.props.currentUser) {\n      filteredTasks = filteredTasks.filter(task => task.checked);\n    }\n    return filteredTasks.map((task) => (\n      <Task key={task._id} task={task} />  //Task子组件在这里被传入key/task两个props\n    ));\n  }\n \n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>The Diary Book</h1>\n          {/*未完成的任务数目在此显示*/} \n          { this.props.currentUser ? <h3>PrivateDiary:({this.props.privateCount})</h3> : ''}\n\n          <AccountsUIWrapper />\n\n          {/*添加一个输入表格,并且使用三元表达式，如果已经有用户登录，则显示输入框<form>，没有用户登录则不显示*/}\n          { this.props.currentUser ?\n             <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)}>\n               <input\n                 id=\"title\"\n                 type=\"text\"\n                 ref=\"titleInput\"\n                 placeholder=\"Type The Diary Title\"\n               />\n               <textarea className=\"new-text-area\" \n                 type=\"text\"\n                 ref=\"areaInput\"\n                 placeholder=\"Say Something Today...\"\n               />\n               <br />\n               <button className=\"form-submit\" type=\"submit\">Submit</button>\n             </form> : ''\n          }\n        </header>\n \n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n//把tasks设定为App的props，tasks里的数据是从Tasks里fetch到的\nexport default withTracker(() => {\n   return {\n     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),  //把数据根据插入顺序排序然后再抓取出来,并且设置成props\n     privateCount: Tasks.find({ checked: { $ne: true } }).count(),  //数一下有多少未完成,并且设置成props\n     currentUser: Meteor.user(), //获得当前已登录用户的信息，并且设置成props\n   };\n})(App);","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.js';\n \nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]