[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// imports/api/tasks.js                                                                                             //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nmodule.export({\n  Tasks: () => Tasks\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n      $or: [{\n        private: {\n          $ne: true\n        }\n      }, {\n        owner: this.userId\n      }]\n    });\n  });\n}\n\nMeteor.methods({\n  'tasks.setPrivate'(taskId, setToPrivate) {\n    check(taskId, String);\n    check(setToPrivate, Boolean);\n    const task = Tasks.findOne(taskId); // Make sure only the task owner can make a task private\n\n    if (task.owner !== this.userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    Tasks.update(taskId, {\n      $set: {\n        private: setToPrivate\n      }\n    });\n  }\n\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"startup\":{\"accounts-config.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// imports/startup/accounts-config.js                                                                               //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 0);\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY'\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"AccountsUIWrapper.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// imports/ui/AccountsUIWrapper.js                                                                                  //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nmodule.export({\n  default: () => AccountsUIWrapper\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 2);\nlet Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 3);\n\nclass AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));\n  }\n\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n\n  render() {\n    // Just render a placeholder container that will be filled in\n    return React.createElement(\"span\", {\n      ref: \"container\"\n    });\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// imports/ui/App.js                                                                                                //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 2);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 3);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 4);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 5);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 6);\n\nclass App extends Component {\n  handleSubmit(event) {\n    event.preventDefault();\n    const textTitle = ReactDOM.findDOMNode(this.refs.titleInput).value.trim();\n    const textArea = ReactDOM.findDOMNode(this.refs.areaInput).value.trim();\n    Tasks.insert({\n      textTitle,\n      textArea,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n      username: Meteor.user().username\n    });\n    ReactDOM.findDOMNode(this.refs.titleInput).value = '';\n    ReactDOM.findDOMNode(this.refs.areaInput).value = '';\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n\n    if (!this.props.currentUser) {\n      filteredTasks = filteredTasks.filter(task => task.checked);\n    }\n\n    return filteredTasks.map(task => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n      return React.createElement(Task, {\n        key: task._id,\n        task: task,\n        showPrivateButton: showPrivateButton\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"The Diary Book\"), this.props.currentUser ? React.createElement(\"h3\", null, \"PrivateDiary:(\", this.props.privateCount, \")\") : '', React.createElement(AccountsUIWrapper, null), this.props.currentUser ? React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      type: \"text\",\n      ref: \"titleInput\",\n      placeholder: \"Type The Diary Title\"\n    }), React.createElement(\"textarea\", {\n      className: \"new-text-area\",\n      type: \"text\",\n      ref: \"areaInput\",\n      placeholder: \"Say Something Today...\"\n    }), React.createElement(\"br\", null), React.createElement(\"button\", {\n      className: \"form-submit\",\n      type: \"submit\"\n    }, \"Submit\")) : ''), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n}\n\nmodule.exportDefault(withTracker(() => {\n  Meteor.subscribe('tasks');\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    privateCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count(),\n    currentUser: Meteor.user()\n  };\n})(App));\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// imports/ui/Task.js                                                                                               //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nmodule.export({\n  default: () => Task\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet classnames;\nmodule.link(\"classnames\", {\n  default(v) {\n    classnames = v;\n  }\n\n}, 2);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 3);\n\nclass Task extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textEditing: false\n    };\n  }\n\n  toggleTextEditing() {\n    this.setState({\n      textEditing: !this.state.textEditing\n    });\n  }\n\n  toggleChecked() {\n    Tasks.update(this.props.task._id, {\n      $set: {\n        checked: !this.props.task.checked\n      }\n    });\n    Meteor.call('tasks.setPrivate', this.props.task._id, !this.props.task.private);\n  }\n\n  deleteThisTask() {\n    Tasks.remove(this.props.task._id);\n  }\n\n  liClicked() {\n    Tasks.update(this.props.task._id, {\n      $set: {\n        onClick: !this.props.task.onClick\n      }\n    });\n  }\n\n  render() {\n    const taskClassName = classnames({\n      checked: this.props.task.checked,\n      private: this.props.task.private\n    });\n    const PrivateOrPublic = this.props.task.checked ? 'public' : 'private';\n    const EditOrSave = !this.state.textEditing ? 'EditTitle' : 'SaveChange';\n    return React.createElement(\"li\", {\n      className: taskClassName\n    }, React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: this.deleteThisTask.bind(this)\n    }, \"\\xD7\"), React.createElement(\"input\", {\n      id: \"inputTrueFalse\",\n      type: \"checkbox\",\n      readOnly: true,\n      checked: !!this.props.task.checked,\n      onClick: this.toggleChecked.bind(this)\n    }), React.createElement(\"button\", {\n      className: \"editText\",\n      onClick: this.toggleTextEditing.bind(this)\n    }, EditOrSave), React.createElement(\"div\", {\n      className: \"toggleTrueFalse\",\n      onClick: this.liClicked.bind(this)\n    }, React.createElement(\"span\", {\n      className: \"text\"\n    }, \"Created By \", this.props.task.username, \":\", React.createElement(\"br\", null), \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", !this.state.textEditing ? React.createElement(\"span\", {\n      id: \"toggleColor\"\n    }, \"Title:\", this.props.task.textTitle) : React.createElement(\"span\", {\n      id: \"toggleTextChange\"\n    }, \"Title:\", React.createElement(\"input\", {\n      id: \"titleChange\",\n      type: \"text\",\n      ref: \"titleChange\",\n      placeholder: this.props.task.textTitle\n    }), React.createElement(\"button\", {\n      className: \"form-submit\",\n      type: \"submit\"\n    }, \"Submit\"))), React.createElement(\"br\", null), \" \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"span\", {\n      className: \"text_status\"\n    }, \"Status:\", PrivateOrPublic), this.props.task.onClick ? '' : React.createElement(\"div\", {\n      id: \"areaText\"\n    }, React.createElement(\"span\", {\n      className: \"text\"\n    }, this.props.task.textArea))));\n  }\n\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                  //\n// client/main.js                                                                                                   //\n//                                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nmodule.link(\"../imports/startup/accounts-config.js\");\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/tasks.js","imports/startup/accounts-config.js","imports/ui/AccountsUIWrapper.js","imports/ui/App.js","imports/ui/Task.js","client/main.js"],"names":["module","export","Tasks","Mongo","link","v","Collection","Meteor","isServer","publish","tasksPublication","find","$or","private","$ne","owner","userId","methods","taskId","setToPrivate","check","String","Boolean","task","findOne","Error","update","$set","Accounts","ui","config","passwordSignupFields","default","AccountsUIWrapper","React","Component","ReactDOM","Template","Blaze","componentDidMount","view","render","loginButtons","findDOMNode","refs","container","componentWillUnmount","remove","withTracker","Task","App","handleSubmit","event","preventDefault","textTitle","titleInput","value","trim","textArea","areaInput","insert","createdAt","Date","username","user","renderTasks","filteredTasks","props","tasks","currentUser","filter","checked","map","currentUserId","_id","showPrivateButton","privateCount","bind","exportDefault","subscribe","sort","fetch","count","classnames","constructor","state","textEditing","toggleTextEditing","setState","toggleChecked","call","deleteThisTask","liClicked","onClick","taskClassName","PrivateOrPublic","EditOrSave","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["\nimport { Mongo } from 'meteor/mongo';\n \nexport const Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  // This code only runs on the server\n  Meteor.publish('tasks', function tasksPublication() {\n    return Tasks.find({\n       $or: [\n         { private: { $ne: true } },\n         { owner: this.userId },\n       ],\n     });\n  });\n}\n\nMeteor.methods({\n   'tasks.setPrivate'(taskId, setToPrivate) {\n     check(taskId, String);\n     check(setToPrivate, Boolean);\n\n     const task = Tasks.findOne(taskId);\n\n     // Make sure only the task owner can make a task private\n     if (task.owner !== this.userId) {\n       throw new Meteor.Error('not-authorized');\n     }\n\n     Tasks.update(taskId, { $set: { private: setToPrivate } });\n   },\n });","\nimport { Accounts } from 'meteor/accounts-base';\n \nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_ONLY',\n});","\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n \nexport default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n}","\nimport React, { Component } from 'react';  \nimport ReactDOM from 'react-dom';  \nimport { Meteor } from 'meteor/meteor';\nimport { withTracker } from 'meteor/react-meteor-data';  \n\nimport { Tasks } from '../api/tasks.js'; \n \nimport Task from './Task.js';  \nimport AccountsUIWrapper from './AccountsUIWrapper.js';  \n \n\nclass App extends Component {\n\n  handleSubmit(event) {\n     event.preventDefault();\n     \n     const textTitle = ReactDOM.findDOMNode(this.refs.titleInput).value.trim();\n     const textArea = ReactDOM.findDOMNode(this.refs.areaInput).value.trim();\n     Tasks.insert({\n       textTitle,\n       textArea,\n       createdAt: new Date(), \n       owner: Meteor.userId(),           \n       username: Meteor.user().username,  \n     });\n\n     ReactDOM.findDOMNode(this.refs.titleInput).value = '';\n     ReactDOM.findDOMNode(this.refs.areaInput).value = '';\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;\n    if (!this.props.currentUser) {\n      filteredTasks = filteredTasks.filter(task => task.checked);\n    }\n    return filteredTasks.map((task) => {\n      const currentUserId = this.props.currentUser && this.props.currentUser._id;\n      const showPrivateButton = task.owner === currentUserId;\n \n      return (\n        <Task\n          key={task._id}\n          task={task}\n          showPrivateButton={showPrivateButton}\n        />\n      );\n    });\n  }\n \n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>The Diary Book</h1>\n\n          { this.props.currentUser ? <h3>PrivateDiary:({this.props.privateCount})</h3> : ''}\n\n          <AccountsUIWrapper />\n\n\n          { this.props.currentUser ?\n             <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)}>\n               <input\n                 id=\"title\"\n                 type=\"text\"\n                 ref=\"titleInput\"\n                 placeholder=\"Type The Diary Title\"\n               />\n               <textarea className=\"new-text-area\" \n                 type=\"text\"\n                 ref=\"areaInput\"\n                 placeholder=\"Say Something Today...\"\n               />\n               <br />\n               <button className=\"form-submit\" type=\"submit\">Submit</button>\n             </form> : ''\n          }\n        </header>\n \n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default withTracker(() => {\n  Meteor.subscribe('tasks');\n   return {\n     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),  \n     privateCount: Tasks.find({ checked: { $ne: true } }).count(),  \n     currentUser: Meteor.user(), \n   };\n})(App);","\nimport React, { Component } from 'react';  \nimport { Meteor } from 'meteor/meteor';\nimport classnames from 'classnames';\n\nimport { Tasks } from '../api/tasks.js';  \n\n\nexport default class Task extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textEditing: false,\n    };\n  }\n\n  toggleTextEditing(){\n    this.setState({\n      textEditing:!this.state.textEditing,\n    })\n  }\n\n  toggleChecked() {\n\n     Tasks.update(this.props.task._id, {  \n       $set: { checked: !this.props.task.checked },\n     });\n     Meteor.call('tasks.setPrivate', this.props.task._id, ! this.props.task.private);\n  }\n\n  deleteThisTask() {  \n     Tasks.remove(this.props.task._id);\n  }\n  \n  liClicked() {  \n     Tasks.update(this.props.task._id,{\n       $set:{ onClick: !this.props.task.onClick },\n     });\n  }\n\n  render() {\n  \t\n    const taskClassName = classnames({\n       checked: this.props.task.checked,\n       private: this.props.task.private,\n    });\n    const PrivateOrPublic = this.props.task.checked ? 'public' :'private';\n    const EditOrSave = !this.state.textEditing ? 'EditTitle' : 'SaveChange'\n\n    return (\n      <li className={taskClassName}>\n         <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n           &times;\n         </button>\n         <input\n           id=\"inputTrueFalse\"\n           type=\"checkbox\"\n           readOnly\n           checked={!!this.props.task.checked}\n           onClick={this.toggleChecked.bind(this)}\n         />\n         <button className=\"editText\" onClick={this.toggleTextEditing.bind(this)}> \n           {EditOrSave}\n         </button>\n\n      <div className=\"toggleTrueFalse\" onClick={this.liClicked.bind(this)}>\n           <span className=\"text\">\n              Created By {this.props.task.username}: \n              <br/> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              {!this.state.textEditing ? <span id=\"toggleColor\">Title:{this.props.task.textTitle}</span> :\n              <span id=\"toggleTextChange\" >\n              Title:\n              <input id=\"titleChange\" \n                 type=\"text\"\n                 ref=\"titleChange\"\n                 placeholder={this.props.task.textTitle}/>\n              <button className=\"form-submit\" type=\"submit\">Submit</button>\n              </span> }\n           </span>\n           <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n           <span className=\"text_status\">\n              Status:{PrivateOrPublic}\n           </span>\n           { this.props.task.onClick ?\n           '' : \n            <div id=\"areaText\">\n            <span className=\"text\">\n              {this.props.task.textArea}\n            </span>\n            </div>\n           }\n      </div>\n       </li>\n    );\n  }\n}\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n\nimport '../imports/startup/accounts-config.js';\nimport App from '../imports/ui/App.js';\n \nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]