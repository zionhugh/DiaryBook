[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasks.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/api/tasks.js                                                                                      //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.export({\n  Tasks: () => Tasks\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst Tasks = new Mongo.Collection('tasks');\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"AccountsUIWrapper.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/AccountsUIWrapper.js                                                                           //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.export({\n  default: () => AccountsUIWrapper\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 2);\nlet Blaze;\nmodule.link(\"meteor/blaze\", {\n  Blaze(v) {\n    Blaze = v;\n  }\n\n}, 3);\n\nclass AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));\n  }\n\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n\n  render() {\n    // Just render a placeholder container that will be filled in\n    return React.createElement(\"span\", {\n      ref: \"container\"\n    });\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"App.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/App.js                                                                                         //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet ReactDOM;\nmodule.link(\"react-dom\", {\n  default(v) {\n    ReactDOM = v;\n  }\n\n}, 1);\nlet withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker(v) {\n    withTracker = v;\n  }\n\n}, 2);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 3);\nlet Task;\nmodule.link(\"./Task.js\", {\n  default(v) {\n    Task = v;\n  }\n\n}, 4);\nlet AccountsUIWrapper;\nmodule.link(\"./AccountsUIWrapper.js\", {\n  default(v) {\n    AccountsUIWrapper = v;\n  }\n\n}, 5);\n\n//导入账号密码包\n// App component - 代表整个App的组件集合\nclass App extends Component {\n  //为筛选表格设置初始 hideCompleted state\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false\n    };\n  } //输入表格的event-handler\n\n\n  handleSubmit(event) {\n    event.preventDefault(); // 通过React 的 ref 找到 textInput 的值\n\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n    Tasks.insert({\n      text,\n      createdAt: new Date() //当前时间的数据\n\n    }); // 清空表格\n\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  } //hideCompleted 的 event-handler\n\n\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks; //声明仅在本作用域内有效的变量\n\n    if (this.state.hideCompleted) {\n      filteredTasks = filteredTasks.filter(task => !task.checked);\n    }\n\n    return filteredTasks.map(task => React.createElement(Task, {\n      key: task._id,\n      task: task\n    }) //Task子组件在这里被传入key/task两个props\n    );\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\"\n    }, React.createElement(\"header\", null, React.createElement(\"h1\", null, \"Zion's Todo List\"), React.createElement(\"h3\", null, \"IncompleteCount:(\", this.props.incompleteCount, \")\"), React.createElement(\"label\", {\n      className: \"hide-completed\"\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: this.state.hideCompleted,\n      onClick: this.toggleHideCompleted.bind(this)\n    }), \"Hide Completed Tasks\"), React.createElement(AccountsUIWrapper, null), React.createElement(\"form\", {\n      className: \"new-task\",\n      onSubmit: this.handleSubmit.bind(this)\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: \"textInput\",\n      placeholder: \"Type to add new tasks\"\n    }))), React.createElement(\"ul\", null, this.renderTasks()));\n  }\n\n} //把tasks设定为App的props，tasks里的数据是从Tasks里fetch到的\n\n\nmodule.exportDefault(withTracker(() => {\n  return {\n    tasks: Tasks.find({}, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch(),\n    //把数据根据插入顺序排序然后再抓取出来,并且设置成props\n    incompleteCount: Tasks.find({\n      checked: {\n        $ne: true\n      }\n    }).count() //数一下有多少未完成,并且设置成props\n\n  };\n})(App));\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// imports/ui/Task.js                                                                                        //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nmodule.export({\n  default: () => Task\n});\nlet React, Component;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  Component(v) {\n    Component = v;\n  }\n\n}, 0);\nlet Tasks;\nmodule.link(\"../api/tasks.js\", {\n  Tasks(v) {\n    Tasks = v;\n  }\n\n}, 1);\n\nclass Task extends Component {\n  toggleChecked() {\n    // 当触发时就把checked状态调整为当前状态的相反值\n    Tasks.update(this.props.task._id, {\n      //.update 采取两个参数，参数一是集合子集的选择器，参数二是对匹配对象的更新参数\n      $set: {\n        checked: !this.props.task.checked\n      }\n    });\n  }\n\n  deleteThisTask() {\n    //.remove() 采取一个参数，这个参数是一个选择器，决定哪个目标被删除\n    Tasks.remove(this.props.task._id);\n  }\n\n  render() {\n    //三元表达式，对每个<li>设置taskClassName,从未对应不同的CSS外表\n    const taskClassName = this.props.task.checked ? 'checked' : '';\n    return React.createElement(\"li\", {\n      className: taskClassName\n    }, React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: this.deleteThisTask.bind(this)\n    }, \"\\xD7\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      readOnly: true,\n      checked: !!this.props.task.checked,\n      onClick: this.toggleChecked.bind(this)\n    }), React.createElement(\"span\", {\n      className: \"text\"\n    }, this.props.task.text));\n  }\n\n}\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                           //\n// client/main.js                                                                                            //\n//                                                                                                           //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                             //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nlet App;\nmodule.link(\"../imports/ui/App.js\", {\n  default(v) {\n    App = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render(React.createElement(App, null), document.getElementById('render-target'));\n});\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/tasks.js","imports/ui/AccountsUIWrapper.js","imports/ui/App.js","imports/ui/Task.js","client/main.js"],"names":["module","export","Tasks","Mongo","link","v","Collection","default","AccountsUIWrapper","React","Component","ReactDOM","Template","Blaze","componentDidMount","view","render","loginButtons","findDOMNode","refs","container","componentWillUnmount","remove","withTracker","Task","App","constructor","props","state","hideCompleted","handleSubmit","event","preventDefault","text","textInput","value","trim","insert","createdAt","Date","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","task","checked","map","_id","incompleteCount","bind","exportDefault","find","sort","fetch","$ne","count","toggleChecked","update","$set","deleteThisTask","taskClassName","Meteor","startup","document","getElementById"],"mappings":"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","file":"/app.js","sourcesContent":["//api这个文件夹是存放集合的  这里的创建了一个Tasks集合, 并且在服务端创建了一个MongoDB collection名叫\"tasks\"\nimport { Mongo } from 'meteor/mongo';\n \nexport const Tasks = new Mongo.Collection('tasks');","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n \nexport default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n}","//App总组件\nimport React, { Component } from 'react';  //默认导入React\nimport ReactDOM from 'react-dom';  //为了使用event-handler\nimport { withTracker } from 'meteor/react-meteor-data';  //把我门的App组件转化为更高阶的组件\n\nimport { Tasks } from '../api/tasks.js'; //导入Tasks集合\n \nimport Task from './Task.js';  //导入子集合\nimport AccountsUIWrapper from './AccountsUIWrapper.js';  //导入账号密码包\n \n// App component - 代表整个App的组件集合\nclass App extends Component {\n  //为筛选表格设置初始 hideCompleted state\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideCompleted: false,\n    };\n  }\n\n  //输入表格的event-handler\n  handleSubmit(event) {\n     event.preventDefault();\n     // 通过React 的 ref 找到 textInput 的值\n     const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\n     Tasks.insert({\n       text,\n       createdAt: new Date(), //当前时间的数据\n     });\n     // 清空表格\n     ReactDOM.findDOMNode(this.refs.textInput).value = '';\n  }\n\n  //hideCompleted 的 event-handler\n  toggleHideCompleted() {\n    this.setState({\n      hideCompleted: !this.state.hideCompleted,\n    });\n  }\n\n  renderTasks() {\n    let filteredTasks = this.props.tasks;  //声明仅在本作用域内有效的变量\n    if (this.state.hideCompleted) {\n       filteredTasks = filteredTasks.filter(task => !task.checked);\n     }\n    return filteredTasks.map((task) => (\n      <Task key={task._id} task={task} />  //Task子组件在这里被传入key/task两个props\n    ));\n  }\n \n  render() {\n    return (\n      <div className=\"container\">\n        <header>\n          <h1>Zion's Todo List</h1>\n          <h3>IncompleteCount:({this.props.incompleteCount})</h3>{/*未完成的任务数目在此显示*/}\n          {/*添加一个查看 hideCompleted 的筛选表格*/}\n          <label className=\"hide-completed\">\n             <input\n               type=\"checkbox\"\n               readOnly\n               checked={this.state.hideCompleted}\n               onClick={this.toggleHideCompleted.bind(this)}\n             />\n             Hide Completed Tasks\n          </label>\n\n          <AccountsUIWrapper />\n\n          {/*添加一个输入表格*/}\n          <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\n             <input\n               type=\"text\"\n               ref=\"textInput\"\n               placeholder=\"Type to add new tasks\"\n             />\n          </form>\n        </header>\n \n        <ul>\n          {this.renderTasks()}\n        </ul>\n      </div>\n    );\n  }\n}\n//把tasks设定为App的props，tasks里的数据是从Tasks里fetch到的\nexport default withTracker(() => {\n   return {\n     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),  //把数据根据插入顺序排序然后再抓取出来,并且设置成props\n     incompleteCount: Tasks.find({ checked: { $ne: true } }).count(),  //数一下有多少未完成,并且设置成props\n   };\n})(App);","//Task组件\nimport React, { Component } from 'react';  ////默认导入React\n\nimport { Tasks } from '../api/tasks.js';  //导入Tasks集合\n \n// Task component - 它有对应每个输入对象的todo自己\nexport default class Task extends Component {\n  toggleChecked() {\n     // 当触发时就把checked状态调整为当前状态的相反值\n     Tasks.update(this.props.task._id, {  //.update 采取两个参数，参数一是集合子集的选择器，参数二是对匹配对象的更新参数\n       $set: { checked: !this.props.task.checked },\n     });\n  }\n\n  deleteThisTask() {  //.remove() 采取一个参数，这个参数是一个选择器，决定哪个目标被删除\n     Tasks.remove(this.props.task._id);\n  }\n\n  render() {\n  \t//三元表达式，对每个<li>设置taskClassName,从未对应不同的CSS外表\n    const taskClassName = this.props.task.checked ? 'checked' : '';\n\n    return (\n      <li className={taskClassName}>\n         <button className=\"delete\" onClick={this.deleteThisTask.bind(this)}>\n           &times;\n         </button>\n\n         <input\n           type=\"checkbox\"\n           readOnly\n           checked={!!this.props.task.checked}\n           onClick={this.toggleChecked.bind(this)}\n         />\n\n         <span className=\"text\">{this.props.task.text}</span>\n       </li>\n    );\n  }\n}","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\n \nimport App from '../imports/ui/App.js';\n \nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});"]}}]